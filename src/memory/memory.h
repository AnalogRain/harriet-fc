#ifndef MEMORY_H
#define MEMORY_H

#include <inttypes.h>
#include <string.h>

#define BANK_OFFSET 0x2000

uint8_t bank;

uint8_t rom[0xF00] = {
	0xe6, 0x02, 0x00,
};

uint8_t global_memory[0x7FFF];

uint8_t preload_program[0x7DFF] = { // temp
	0x0e, 0x03, 0x7f, 0xff, 0x0e, 0x00, 0x80, 0x01, 0x0e, 0x02, 0x80, 0x02, 0x0e, 0x00, 0x80, 0x03, 0x0e, 0x03, 0x80, 0x02, 0x0e, 0x80, 0x80, 0x03, 0x0e, 0x07, 0x80, 0x02, 0x0e, 0x40, 0x80, 0x03, 0x0e, 0x01, 0x80, 0x02, 0x0e, 0x64, 0x80, 0x03, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x31, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x33, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x34, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x36, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x33, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0xa2, 0x02, 0x7f, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x2f, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0x0e, 0x04, 0x80, 0x02, 0x0e, 0x31, 0x80, 0x03, 0xa2, 0x02, 0x7f, 0xa2, 0x02, 0x7f, 0xa2, 0x02, 0x7f, 0xff, 0xa2, 0x02, 0x8c, 0xa2, 0x02, 0x8c, 0xa2, 0x02, 0x8c, 0xa2, 0x02, 0x8c, 0xa3, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa2, 0x02, 0xab, 0xa3, 0xa2, 0x02, 0xbb, 0xa2, 0x02, 0xbb, 0xa2, 0x02, 0xbb, 0xa2, 0x02, 0xbb, 0xa2, 0x02, 0xbb, 0xa3, 0x2c, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x98, 0xe5, 0x02, 0xbd, 0xa3
};

// 0x7FFE number of device banks + 1
// 0x7FFF current bank number

uint8_t preload_ihandler[0xFE] = {
	0xad, 0xae, 0xaf, 0xb0, 0xb1, 0x1f, 0x7f, 0xfe, 0x09, 0x7f, 0xff, 0x20, 0x80, 0x00, 0xd6, 0x00, 0xdf, 0x02, 0x16, 0xa2, 0xff, 0x00, 0x95, 0xd5, 0x01, 0xe5, 0x02, 0x08, 0xb7, 0xb6, 0xb5, 0xb4, 0xb3, 0xa4
};

uint8_t keyboard_handler[0x100] = {

};

uint8_t clock_handler[0x100] = {

};

uint8_t audio_handler[0x100] = {

};

uint8_t video_handler[0x100] = {

};

uint8_t floppy1_handler[0x100] = {

};

uint8_t floppy2_handler[0x100] = {

};

void do_controller_cycle();

#endif
