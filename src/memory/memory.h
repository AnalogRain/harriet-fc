#ifndef MEMORY_H
#define MEMORY_H

#include <inttypes.h>
#include <string.h>

uint8_t bank;

uint8_t rom[0xF00] = {
	// 0x18, 0xFF,
	// 0x74,
	// 0xC0, 0x40, 0x02
	// 0x17, 0xAE, // R0 = 0xAE
	// 0xE4, 0x0F, // store R0 at the address 0x000F points to
	// 0x13, 0x00  // load value at 0x0000 into memory


	// 0x17, 0x12, // load lit r0 0x12
	//
	// 0x73, // dec r0
	// 0x08, 0x00, // store zp r0 0x00
	// 0x1F, // trans r0 acc
	// 0x3D, 0x3E, // add lit 0x3E
	// 0x0C, 0x02, // store zp acc 0x02
	// 0x6E, // inc r0

	0x02, 0x40, 0x02, // store lit 0x40, 0x02
	0x02, 0x02, 0x00, // store lit 0x40, 0x02

	0x18, 0x00, // load lit r1 0x00
	0x74, // dec r1

	0x09, 0x01, // store zp r1 0x01
	0x09, 0x03, // store zp r1 0x03

	0xDC, 0x02, // load ind zp r2 0x02
	0xE6, 0x00, // store ind zp r2 0x00

	0xC0, 0x40, 0x08, // bran z top

	// 0xB0, 0x03, // cmp r0 0x03
	// 0xC0, 0x40, 0x01, // bran z top
	//
	0xC1, 0x02, 0x17, // jmp 0x0217
	//
	0x01, 0x03, 0x3F, 0xFF, // STORE #$03 $3FFF // switch to audio bank
	0x01, 0x00, 0x40, 0x01, // STORE #$00 $4001 // switch to oscillator 0
	0x01, 0x02, 0x40, 0x02, // STORE #$02 $4002 // switch to waveform register
	0x01, 0x00, 0x40, 0x03, // STORE #$01 $4003 // switch to saw wave
	0x01, 0x01, 0x40, 0x02, // STORE #$01 $4002 // switch to lowpass register
	0x01, 0xFF, 0x40, 0x03, // STORE #$FF $4003 // turn off lowpass
	0x01, 0x04, 0x40, 0x02, // STORE #$01 $4004 // switch to note register
	0x01,   49, 0x40, 0x03, // STORE #$FF $4003 // set note to 49
	0x01, 0x03, 0x40, 0x02, // STORE #$01 $4004 // switch to note register
	0x01, 0x80, 0x40, 0x03, // STORE #$FF $4003 // set note to 49
	0x01, 0x07, 0x40, 0x02, // STORE #$07 $4002 // switch to volume register
	0x01, 0x20, 0x40, 0x03, // STORE #$20 $4003 // set volume to 32
	0xC1, 0x02, 0x3F 	   // JMP $023F 		// loop forever
};

uint8_t global_memory[0x3FFF];

void do_controller_cycle();

#endif
